import { ChildProcess } from 'child_process';
import { debug } from 'console';
import { readFile, writeFile } from 'fs'
import { Selector } from 'testcafe';
import page from '../page_model/POM_01_PlaceOrders';
import Colors from 'colors';
import { waitForDebugger } from 'inspector';
import { app, MyEnv } from '../helpers/urls';

fixture ('Cancel Orders '+ MyEnv)
    .page(MyEnv)
    //.page `https://app.stage.mybinxhealth.com/?partner=hccom`
    .httpAuth({
      username: 'atlas',
      password: '1967'
    });

test('New User - Cancel order with reason: Pre-fulfillment - no charge'.green, async t => {
  console.log(" \u2713".green + " New User - Cancel order with reason: Pre-fulfillment - no charge".green)
  await page.CV19product()
    console.log(" \u2713".green + "  Select CV19 product".gray)
  await page.Screening1()
    console.log(" \u2713".green + "  Answer Screening".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Checkout".gray)
  await page.PersonalUSdata()
    console.log(" \u2713".green + "  Fill Personal Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Address Tab".gray)
  await page.AddressUSdata()
    console.log(" \u2713".green + "  Fill Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + "  Fill Payment".gray)
  await page.User_credentials()
    console.log(" \u2713".green + "  Fill Email & Password".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Review Tab".gray)
  await page.ReviewGeneric('N')
    console.log(" \u2713".green + "  Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + "  Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + "  Order Number Stored".gray)
  await page.CancelTheOrder(OrderNumber)
    console.log(" \u2713".green + "  Cancelling Order".gray)
  await t
    .click(Selector('#cancelReason'))
    .click(Selector('#cancelReason').find('option').withText('Pre-fulfillment - no charge'))
    .click(Selector('input').withAttribute('value','Cancel Order'))

  
});
test('Existing User - Cancel order with reason: Kit lost in transit - no charge', async t => {
  console.log(" \u2713".green + " Existing User - Cancel order with reason: Kit lost in transit - no charge".green)

  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + "  Login".gray)
  await t.navigateTo('https://app.stage.mybinxhealth.com/binx-boxes/binx-box-i')
  await page.GetPayCheckout()
    console.log(" \u2713".green + "  binx HPV box selected > Pay with Cash > Checkout".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Personal Tab".gray)
  await t.click(page.rbAgree)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + "  Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + "  Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + "  Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + "  Order Number Stored".gray)
  await page.CancelTheOrder(OrderNumber)
    console.log(" \u2713".green + "  Cancelling Order".gray)
  await t
    .click(Selector('#cancelReason'))
    .click(Selector('#cancelReason').find('option').withText('Kit lost in transit - no charge'))
    .click(Selector('input').withAttribute('value','Cancel Order'))

});
test('Existing User - Cancel order with reason: Delivered kit can\u0027t be located - charge', async t => {
  console.log(" Existing User - Cancel order with reason: Delivered kit can't be located - charge".green)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + "  Login".gray)
  await t.navigateTo('https://app.stage.mybinxhealth.com/binx-boxes/hpv')
  await page.GetPayCheckout()
    console.log(" \u2713".green + "  binx HPV box selected > Pay with Cash > Checkout".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Personal Tab".gray)
  await t.click(page.rbAgree)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + "  Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + "  Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + "  Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + "  Order Number Stored".gray)
  await page.CancelTheOrder(OrderNumber)
    console.log(" \u2713".green + "  Cancelling Order".gray)
  await t
    .click(Selector('#cancelReason'))
    .click(Selector('#cancelReason').find('option').withText('Delivered kit can\u0027t be located - charge'))
    .click(Selector('input').withAttribute('value','Cancel Order'))
});
test('Existing User - Cancel order with reason: Patient Error - charge', async t => {
  console.log(" Existing User - Cancel order with reason: Patient Error - charge".green)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + "  Login".gray)
  await t.navigateTo('https://app.stage.mybinxhealth.com/binx-boxes/binx-box-ii')
  await page.GetPayCheckout()
    console.log(" \u2713".green + "  binx box II selected > Pay with Cash > Checkout".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Personal Tab".gray)
  await t.click(page.rbAgree)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + "  Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + "  Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + "  Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + "  Order Number Stored".gray)
  await page.CancelTheOrder(OrderNumber)
    console.log(" \u2713".green + "  Cancelling Order".gray)
  await t
    .click(Selector('#cancelReason'))
    .click(Selector('#cancelReason').find('option').withText('Patient Error - charge'))
    .click(Selector('input').withAttribute('value','Cancel Order'))  
});
test('Existing User - Cancel order with reason: binx Error - no charge', async t => {
  console.log(" Existing User - Cancel order with reason: binx Error - no charge".green)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + "  Login".gray)
  await t.navigateTo('https://app.stage.mybinxhealth.com/binx-boxes/binx-box-iii')
  await page.GetPayCheckout()
    console.log(" \u2713".green + "  binx box III selected > Pay with Cash > Checkout".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Personal Tab".gray)
  await t.click(page.rbAgree)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + "  Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + "  Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + "  Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + "  Order Number Stored".gray)
  await page.CancelTheOrder(OrderNumber)
    console.log(" \u2713".green + "  Cancelling Order".gray)
  await t
    .click(Selector('#cancelReason'))
    .click(Selector('#cancelReason').find('option').withText('binx Error - no charge'))
    .click(Selector('input').withAttribute('value','Cancel Order'))  

});
test('Existing User - Cancel order with reason: Order expired - charge', async t => {
  console.log(" Existing User - Cancel order with reason: Order expired - charge".green)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + "  Login".gray)
  await t.navigateTo('https://app.stage.mybinxhealth.com/binx-boxes/binx-box-iv')
  await page.GetPayCheckout()
    console.log(" \u2713".green + "  binx box IV selected > Pay with Cash > Checkout".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Personal Tab".gray)
  await t.click(page.rbAgree)  
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + "  Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + "  Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + "  Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + "  Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + "  Order Number Stored".gray)
  await page.CancelTheOrder(OrderNumber)
    console.log(" \u2713".green + "  Cancelling Order".gray)
  await t
    .click(Selector('#cancelReason'))
    .click(Selector('#cancelReason').find('option').withText('Order expired - charge'))
    .click(Selector('input').withAttribute('value','Cancel Order'))  
    
});
