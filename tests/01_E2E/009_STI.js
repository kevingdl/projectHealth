import { ChildProcess } from 'child_process';
import { debug } from 'console';
import { readFile, writeFile } from 'fs'
import { Selector } from 'testcafe';
import page from '../page_model/POM_01_PlaceOrders';
import Colors from 'colors';
import { MyEnv } from '../helpers/urls';


fixture `E2E - STI`
    .page(MyEnv+'binx-boxes/binx-box-i')
    .httpAuth({
      username: 'atlas',
      password: '1967'
    });

test('Passed\nNew User - binx box I', async t => {
  console.log(" New User - binx box I".gray)

  await page.GetPayCheckout()
    console.log(" \u2713".green + " binx box I selected > Pay with Cash > Checkout".gray)
  await page.PersonalUSdata()
    console.log(" \u2713".green + " Fill Personal Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Address Tab".gray)
  await page.AddressUSdata()
    console.log(" \u2713".green + " Fill Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + " Fill Payment".gray)
  await page.User_credentials()
    console.log(" \u2713".green + " Fill Email & Password".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + " Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + " Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + " Order Number Stored".gray)
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Dashboard".gray)
  /*
    await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Orders".gray)
  await page.Approve_Release(OrderNumber,'Approve')
    console.log(" \u2713".green + " Order Approved".gray)
  */
  await page.ShipTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Shipped".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Orders".gray)
  const Barcode = await page.GetTheBarcode(OrderNumber)
    console.log(" \u2713".green + " Barcode created".gray)
    
  await page.GoToApp()
  await page.MobileMenu()
  await page.ActivateTheBox()
    console.log(" \u2713".green + " Activate the box".gray)
  await page.ActivateTheOrder(Barcode)
    console.log(" \u2713".green + " Type the Barcode".gray)
  await page.ActivateBarcode()
    console.log(" \u2713".green + " Barcode activated".gray)
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Orders".gray)
  await page.ReceiveTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Received".gray)

  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Orders".gray)
  await page.Mock_BinxBoxI_results(OrderNumber)
    console.log(" \u2713".green + " Mock Result".gray)
  await page.Approve_Release(OrderNumber,'Release') 
    console.log(" \u2713".green + " Release Result".gray)

  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Order" + "\n".gray)
  await page.VerifyResultPage(OrderNumber)
    console.log(" \u2713".green + " Results Page available".gray + "\n")

});
test.skip('Passed\nExisting User - binx HPV box', async t => {
  console.log(" Existing User - binx HPV box".gray)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + " Login".gray)
  await t.navigateTo(MyEnv+'binx-boxes/hpv')
  await page.GetPayCheckout()
    console.log(" \u2713".green + " binx HPV box selected > Pay with Cash > Checkout".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Personal Tab".gray)
  await t.click(page.rbAgree)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + " Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + " Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + " Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + " Order Number Stored".gray)
/*  
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Orders".gray)
  //await page.Approve_Release(OrderNumber,'Approve".gray)  
*/
  await page.ShipTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Shipped".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Orders".gray)
  const Barcode = await page.GetTheBarcode(OrderNumber)
    console.log(" \u2713".green + " Barcode created".gray)
  
  await page.GoToApp()
  await page.MobileMenu()
  await page.ActivateTheBox()
    console.log(" \u2713".green + " Activate the box".gray)
  await page.ActivateTheOrder(Barcode)
    console.log(" \u2713".green + " Type the Barcode".gray)
  await page.ActivateBarcode()
    console.log(" \u2713".green + " Barcode activated".gray)
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Orders".gray)
  await page.ReceiveTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Received".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Orders".gray)
  await page.Mock_BinxHPVbox_results(OrderNumber)
    console.log(" \u2713".green + " Mock Result".gray)
  //await page.Approve_Release(OrderNumber,'Release')  
  //console.log(" \u2713".green + " Release Result".gray)

  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Order".gray)
  await page.VerifyResultPage(OrderNumber)
    console.log(" \u2713".green + " Results Page available".gray + "\n")

});
test('Passed\nExisting User - binx box II', async t => {
  console.log(" Existing User - binx box II".gray)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + " Login".gray)
  await t.navigateTo(MyEnv+'binx-boxes/binx-box-ii')
  await page.GetPayCheckout()
    console.log(" \u2713".green + " binx box II selected > Pay with Cash > Checkout".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Personal Tab".gray)
  await t.click(page.rbAgree)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + " Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + " Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + " Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + " Order Number Stored".gray)
/*  
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Orders".gray)
  //await page.Approve_Release(OrderNumber,'Approve".gray)  
*/
  await page.ShipTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Shipped".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Orders".gray)
  const Barcode = await page.GetTheBarcode(OrderNumber)
    console.log(" \u2713".green + " Barcode created".gray)
  
  await page.GoToApp()
  await page.MobileMenu()
  await page.ActivateTheBox()
    console.log(" \u2713".green + " Activate the box".gray)
  await page.ActivateTheOrder(Barcode)
    console.log(" \u2713".green + " Type the Barcode".gray)
  await page.ActivateBarcode()
    console.log(" \u2713".green + " Barcode activated".gray)
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Orders".gray)
  await page.ReceiveTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Received".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Orders".gray)
  await page.Mock_BinxBoxII_results(OrderNumber)
    console.log(" \u2713".green + " Mock Result".gray)
  await page.Approve_Release(OrderNumber,'Release')  
    console.log(" \u2713".green + " Release Result".gray)

  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Order".gray)
  await page.VerifyResultPage(OrderNumber)
    console.log(" \u2713".green + " Results Page available".gray + "\n")
});
test('Passed\nExisting User - binx box III', async t => {
  console.log(" Existing User - binx box III".gray)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + " Login".gray)
  await t.navigateTo(MyEnv+'binx-boxes/binx-box-iii')
  await page.GetPayCheckout()
    console.log(" \u2713".green + " binx box III selected > Pay with Cash > Checkout".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Personal Tab".gray)
  await t.click(page.rbAgree)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + " Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + " Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + " Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + " Order Number Stored".gray)
/*  
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Orders".gray)
  //await page.Approve_Release(OrderNumber,'Approve".gray)  
*/
  await page.ShipTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Shipped".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Orders".gray)
  const Barcode = await page.GetTheBarcode(OrderNumber)
    console.log(" \u2713".green + " Barcode created".gray)
  
  await page.GoToApp()
  await page.MobileMenu()
  await page.ActivateTheBox()
    console.log(" \u2713".green + " Activate the box".gray)
  await page.ActivateTheOrder(Barcode)
    console.log(" \u2713".green + " Type the Barcode".gray)
  await page.ActivateBarcode()
    console.log(" \u2713".green + " Barcode activated".gray)
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Orders".gray)
  await page.ReceiveTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Received".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Orders".gray)
  await page.Mock_BinxBoxIII_results(OrderNumber)
    console.log(" \u2713".green + " Mock Result".gray)
  //await page.Approve_Release(OrderNumber,'Release')  
  //  console.log(" \u2713".green + " Release Result".gray)

  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Order".gray)
  await page.VerifyResultPage(OrderNumber)
    console.log(" \u2713".green + " Results Page available".gray + "\n")
});
test('Passed\nExisting User - binx box IV', async t => {
  console.log(" Existing User - binx box IV".gray)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + " Login".gray)
  await t.navigateTo(MyEnv+'binx-boxes/binx-box-iv')
  await page.GetPayCheckout()
    console.log(" \u2713".green + " binx box IV selected > Pay with Cash > Checkout".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Personal Tab".gray)
  await t.click(page.rbAgree)  
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + " Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + " Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + " Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + " Order Number Stored".gray)
/*  
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Orders".gray)
  //await page.Approve_Release(OrderNumber,'Approve".gray)  
*/
  await page.ShipTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Shipped".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Orders".gray)
  const Barcode = await page.GetTheBarcode(OrderNumber)
    console.log(" \u2713".green + " Barcode created".gray)
  
  await page.GoToApp()
  await page.MobileMenu()
  await page.ActivateTheBox()
    console.log(" \u2713".green + " Activate the box".gray)
  await page.ActivateTheOrder(Barcode)
    console.log(" \u2713".green + " Type the Barcode".gray)
  await page.ActivateBarcode()
    console.log(" \u2713".green + " Barcode activated".gray)
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Orders".gray)
  await page.ReceiveTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Received".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Orders".gray)
  await page.Mock_BinxBoxIV_results(OrderNumber)
    console.log(" \u2713".green + " Mock Result".gray)
  await page.Approve_Release(OrderNumber,'Release')  
    console.log(" \u2713".green + " Release Result".gray)

  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Order".gray)
  await page.VerifyResultPage(OrderNumber)
    console.log(" \u2713".green + " Results Page available".gray + "\n")
});
test('Passed\nExisting User - binx box V', async t => {
  console.log(" Existing User - binx box V".gray)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + " Login".gray)
  await t.navigateTo(MyEnv+'binx-boxes/binx-box-v')
  await page.GetPayCheckout()
    console.log(" \u2713".green + " binx box V selected > Pay with Cash > Checkout".gray)
  await t.click(Selector('#syphilisAcknowledgement'))
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Personal Tab".gray)
  await t.click(page.rbAgree)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + " Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + " Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + " Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + " Order Number Stored".gray)
/*  
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Orders".gray)
  //await page.Approve_Release(OrderNumber,'Approve".gray)  
*/
  await page.ShipTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Shipped".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Orders".gray)
  const Barcode = await page.GetTheBarcode(OrderNumber)
    console.log(" \u2713".green + " Barcode created".gray)
  
  await page.GoToApp()
  await page.MobileMenu()
  await page.ActivateTheBox()
    console.log(" \u2713".green + " Activate the box".gray)
  await page.ActivateTheOrder(Barcode)
    console.log(" \u2713".green + " Type the Barcode".gray)
  await page.ActivateBarcode()
    console.log(" \u2713".green + " Barcode activated".gray)
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Orders".gray)
  await page.ReceiveTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Received".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Orders".gray)
  await page.Mock_BinxBoxV_results(OrderNumber)
    console.log(" \u2713".green + " Mock Result".gray)
  await page.Approve_Release(OrderNumber,'Release')  
    console.log(" \u2713".green + " Release Result".gray)

  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Order".gray)
  await page.VerifyResultPage(OrderNumber)
    console.log(" \u2713".green + " Results Page available".gray + "\n")
});
test('Passed\nExisting User - binx for PrEP', async t => {
  console.log(" Existing User - binx for PrEP".gray)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + " Login".gray)
  await t.navigateTo(MyEnv+'binx-boxes/binx-for-prep-sti')
  await page.GetPayCheckout()
    console.log(" \u2713".green + " binx for PrEP selected > Pay with Cash > Checkout".gray)
  await t.click(Selector('#syphilisAcknowledgement'))
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Personal Tab".gray)
  await t.click(page.rbAgree)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + " Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + " Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + " Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + " Order Number Stored".gray)
/*  
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Orders".gray)
  //await page.Approve_Release(OrderNumber,'Approve".gray)  
*/
  await page.ShipTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Shipped".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Orders".gray)
  const Barcode = await page.GetTheBarcode(OrderNumber)
    console.log(" \u2713".green + " Barcode created".gray)
  
  await page.GoToApp()
  await page.MobileMenu()
  await page.ActivateTheBox()
    console.log(" \u2713".green + " Activate the box".gray)
  await page.ActivateTheOrder(Barcode)
    console.log(" \u2713".green + " Type the Barcode".gray)
  await page.ActivateBarcode()
    console.log(" \u2713".green + " Barcode activated".gray)
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Orders".gray)
  await page.ReceiveTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Received".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Orders".gray)
  await page.Mock_BinxBoxPrEP_results(OrderNumber)
    console.log(" \u2713".green + " Mock Result".gray)
  await page.Approve_Release(OrderNumber,'Release')  
    console.log(" \u2713".green + " Release Result".gray)

  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Order".gray)
  await page.VerifyResultPage(OrderNumber)
    console.log(" \u2713".green + " Results Page available".gray + "\n")
});
test('Passed\nExisting User - binx box VI', async t => {
  console.log(" Existing User - binx box VI".gray)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + " Login".gray)
  await t.navigateTo(MyEnv+'binx-boxes/binx-box-vi')
  await page.GetPayCheckout()
    console.log(" \u2713".green + " binx box VI selected > Pay with Cash > Checkout".gray)
  await t.click(Selector('#syphilisAcknowledgement'))
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Personal Tab".gray)
  await t.click(page.rbAgree)  
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + " Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + " Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + " Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + " Order Number Stored".gray)
/*  
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Orders".gray)
  //await page.Approve_Release(OrderNumber,'Approve".gray)  
*/
  await page.ShipTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Shipped".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Orders".gray)
  const Barcode = await page.GetTheBarcode(OrderNumber)
    console.log(" \u2713".green + " Barcode created".gray)
  
  await page.GoToApp()
  await page.MobileMenu()
  await page.ActivateTheBox()
    console.log(" \u2713".green + " Activate the box".gray)
  await page.ActivateTheOrder(Barcode)
    console.log(" \u2713".green + " Type the Barcode".gray)
  await page.ActivateBarcode()
    console.log(" \u2713".green + " Barcode activated".gray)
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Orders".gray)
  await page.ReceiveTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Received".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Orders".gray)
  await page.Mock_BinxBoxVI_results(OrderNumber)
    console.log(" \u2713".green + " Mock Result".gray)
  //await page.Approve_Release(OrderNumber,'Release')  
  //  console.log(" \u2713".green + " Release Result".gray)

  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Order".gray)
  await page.VerifyResultPage(OrderNumber)
    console.log(" \u2713".green + " Results Page available".gray + "\n")
});
test('Passed\nExisting User - binx for PrEP starter ', async t => {
  console.log(" Existing User - binx for PrEP starter".gray)
  await page.MobileMenu()
  await page.LoginUser()
    console.log(" \u2713".green + " Login".gray)
  await t.navigateTo(MyEnv+'binx-boxes/binx-for-prep-starter')
  await page.GetPayCheckout()
    console.log(" \u2713".green + " binx for PrEP starter selected > Pay with Cash > Checkout".gray)
  await t.click(Selector('#syphilisAcknowledgement'))
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Personal Tab".gray)
  await t.click(page.rbAgree)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Address Tab".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Payment Tab".gray)
  await page.PayUSdata()
    console.log(" \u2713".green + " Fill Payment".gray)
  await page.NextScreen()
    console.log(" \u2713".green + " Continue to Review Tab".gray)
  await page.ReviewGeneric('Y')
    console.log(" \u2713".green + " Testing & Research Consent".gray)
  await page.CreateOrder()
    console.log(" \u2713".green + " Order Placed".gray)
  const OrderNumber = await page.StoreOrderNum()
    console.log(" \u2713".green + " Order Number Stored".gray)
/*  
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Placed')
    console.log(" \u2713".green + " Order Placed: My Account > Orders".gray)
  //await page.Approve_Release(OrderNumber,'Approve".gray)  
*/
  await page.ShipTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Shipped".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Shipped')
    console.log(" \u2713".green + " Order Shipped: My Account > Orders".gray)
  const Barcode = await page.GetTheBarcode(OrderNumber)
    console.log(" \u2713".green + " Barcode created".gray)
  
  await page.GoToApp()
  await page.MobileMenu()
  await page.ActivateTheBox()
    console.log(" \u2713".green + " Activate the box".gray)
  await page.ActivateTheOrder(Barcode)
    console.log(" \u2713".green + " Type the Barcode".gray)
  await page.ActivateBarcode()
    console.log(" \u2713".green + " Barcode activated".gray)
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Activated')
    console.log(" \u2713".green + " Order Activated: My Account > Orders".gray)
  await page.ReceiveTheOrder(OrderNumber)
    console.log(" \u2713".green + " Order Received".gray)
  
  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Processing')
    console.log(" \u2713".green + " Order Processing: My Account > Orders".gray)
  await page.Mock_BinxBoxPrEPstarter_results(OrderNumber)
    console.log(" \u2713".green + " Mock Result".gray)
  await page.Approve_Release(OrderNumber,'Release')  
    console.log(" \u2713".green + " Release Result".gray)

  await page.GoToApp()
  await t.expect(await page.CheckOrderDashboard(OrderNumber)).eql(' Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Dashboard".gray)
  await t.expect(await page.CheckOrderStatus(OrderNumber)).eql('Results Ready')
    console.log(" \u2713".green + " Order Results Ready: My Account > Order".gray)
  await page.VerifyResultPage(OrderNumber)
    console.log(" \u2713".green + " Results Page available".gray + "\n")
});
